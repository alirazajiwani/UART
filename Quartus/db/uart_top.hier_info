|uart_top
clk => clk.IN3
reset => reset.IN3
tx_en => tx_en.IN1
tx_data_in[0] => tx_data_in[0].IN1
tx_data_in[1] => tx_data_in[1].IN1
tx_data_in[2] => tx_data_in[2].IN1
tx_data_in[3] => tx_data_in[3].IN1
tx_data_in[4] => tx_data_in[4].IN1
tx_data_in[5] => tx_data_in[5].IN1
tx_data_in[6] => tx_data_in[6].IN1
tx_data_in[7] => tx_data_in[7].IN1
rx_data => rx_data.IN1
tx_data << uart_tx:tx_inst.tx_data
tx_busy << uart_tx:tx_inst.tx_busy
rx_data_out[0] << uart_rx:rx_inst.data_out
rx_data_out[1] << uart_rx:rx_inst.data_out
rx_data_out[2] << uart_rx:rx_inst.data_out
rx_data_out[3] << uart_rx:rx_inst.data_out
rx_data_out[4] << uart_rx:rx_inst.data_out
rx_data_out[5] << uart_rx:rx_inst.data_out
rx_data_out[6] << uart_rx:rx_inst.data_out
rx_data_out[7] << uart_rx:rx_inst.data_out
rx_done << uart_rx:rx_inst.rx_done
parity_error << uart_rx:rx_inst.parity_error
stop_error << uart_rx:rx_inst.stop_error
baud_tick_dbg << baud_tick.DB_MAX_OUTPUT_PORT_TYPE
baud_tick_16x_dbg << tick_16x.DB_MAX_OUTPUT_PORT_TYPE


|uart_top|baud_generator:baud_inst
clk => tick_16x~reg0.CLK
clk => baud_tick~reg0.CLK
clk => tick16x_count[0].CLK
clk => tick16x_count[1].CLK
clk => tick16x_count[2].CLK
clk => tick16x_count[3].CLK
clk => tick16x_count[4].CLK
clk => tick16x_count[5].CLK
clk => tick16x_count[6].CLK
clk => baud_count[0].CLK
clk => baud_count[1].CLK
clk => baud_count[2].CLK
clk => baud_count[3].CLK
clk => baud_count[4].CLK
clk => baud_count[5].CLK
clk => baud_count[6].CLK
clk => baud_count[7].CLK
clk => baud_count[8].CLK
clk => baud_count[9].CLK
clk => baud_count[10].CLK
reset => baud_count.OUTPUTSELECT
reset => baud_count.OUTPUTSELECT
reset => baud_count.OUTPUTSELECT
reset => baud_count.OUTPUTSELECT
reset => baud_count.OUTPUTSELECT
reset => baud_count.OUTPUTSELECT
reset => baud_count.OUTPUTSELECT
reset => baud_count.OUTPUTSELECT
reset => baud_count.OUTPUTSELECT
reset => baud_count.OUTPUTSELECT
reset => baud_count.OUTPUTSELECT
reset => tick16x_count.OUTPUTSELECT
reset => tick16x_count.OUTPUTSELECT
reset => tick16x_count.OUTPUTSELECT
reset => tick16x_count.OUTPUTSELECT
reset => tick16x_count.OUTPUTSELECT
reset => tick16x_count.OUTPUTSELECT
reset => tick16x_count.OUTPUTSELECT
reset => baud_tick.OUTPUTSELECT
reset => tick_16x.OUTPUTSELECT
baud_tick <= baud_tick~reg0.DB_MAX_OUTPUT_PORT_TYPE
tick_16x <= tick_16x~reg0.DB_MAX_OUTPUT_PORT_TYPE


|uart_top|uart_tx:tx_inst
clk => parity_bit.CLK
clk => tx_busy~reg0.CLK
clk => tx_reg.CLK
clk => data_reg[0].CLK
clk => data_reg[1].CLK
clk => data_reg[2].CLK
clk => data_reg[3].CLK
clk => data_reg[4].CLK
clk => data_reg[5].CLK
clk => data_reg[6].CLK
clk => data_reg[7].CLK
clk => bit_count[0].CLK
clk => bit_count[1].CLK
clk => bit_count[2].CLK
clk => tx_en_latched.CLK
clk => CS~5.DATAIN
reset => tx_en_latched.OUTPUTSELECT
reset => CS.OUTPUTSELECT
reset => CS.OUTPUTSELECT
reset => CS.OUTPUTSELECT
reset => CS.OUTPUTSELECT
reset => CS.OUTPUTSELECT
reset => bit_count.OUTPUTSELECT
reset => bit_count.OUTPUTSELECT
reset => bit_count.OUTPUTSELECT
reset => data_reg.OUTPUTSELECT
reset => data_reg.OUTPUTSELECT
reset => data_reg.OUTPUTSELECT
reset => data_reg.OUTPUTSELECT
reset => data_reg.OUTPUTSELECT
reset => data_reg.OUTPUTSELECT
reset => data_reg.OUTPUTSELECT
reset => data_reg.OUTPUTSELECT
reset => tx_reg.OUTPUTSELECT
reset => tx_busy.OUTPUTSELECT
reset => parity_bit.OUTPUTSELECT
data_in[0] => WideXor0.IN0
data_in[0] => data_reg.DATAB
data_in[1] => WideXor0.IN1
data_in[1] => data_reg.DATAB
data_in[2] => WideXor0.IN2
data_in[2] => data_reg.DATAB
data_in[3] => WideXor0.IN3
data_in[3] => data_reg.DATAB
data_in[4] => WideXor0.IN4
data_in[4] => data_reg.DATAB
data_in[5] => WideXor0.IN5
data_in[5] => data_reg.DATAB
data_in[6] => WideXor0.IN6
data_in[6] => data_reg.DATAB
data_in[7] => WideXor0.IN7
data_in[7] => data_reg.DATAB
tx_en => always0.IN1
baud_tick => always0.IN0
baud_tick => tx_reg.OUTPUTSELECT
baud_tick => CS.OUTPUTSELECT
baud_tick => CS.OUTPUTSELECT
baud_tick => CS.OUTPUTSELECT
baud_tick => CS.OUTPUTSELECT
baud_tick => CS.OUTPUTSELECT
baud_tick => tx_busy.OUTPUTSELECT
baud_tick => data_reg.OUTPUTSELECT
baud_tick => data_reg.OUTPUTSELECT
baud_tick => data_reg.OUTPUTSELECT
baud_tick => data_reg.OUTPUTSELECT
baud_tick => data_reg.OUTPUTSELECT
baud_tick => data_reg.OUTPUTSELECT
baud_tick => data_reg.OUTPUTSELECT
baud_tick => data_reg.OUTPUTSELECT
baud_tick => bit_count.OUTPUTSELECT
baud_tick => bit_count.OUTPUTSELECT
baud_tick => bit_count.OUTPUTSELECT
baud_tick => parity_bit.OUTPUTSELECT
tx_data <= tx_reg.DB_MAX_OUTPUT_PORT_TYPE
tx_busy <= tx_busy~reg0.DB_MAX_OUTPUT_PORT_TYPE


|uart_top|uart_rx:rx_inst
clk => stop_error~reg0.CLK
clk => parity_error~reg0.CLK
clk => rx_done~reg0.CLK
clk => data_out[0]~reg0.CLK
clk => data_out[1]~reg0.CLK
clk => data_out[2]~reg0.CLK
clk => data_out[3]~reg0.CLK
clk => data_out[4]~reg0.CLK
clk => data_out[5]~reg0.CLK
clk => data_out[6]~reg0.CLK
clk => data_out[7]~reg0.CLK
clk => data_reg[0].CLK
clk => data_reg[1].CLK
clk => data_reg[2].CLK
clk => data_reg[3].CLK
clk => data_reg[4].CLK
clk => data_reg[5].CLK
clk => data_reg[6].CLK
clk => data_reg[7].CLK
clk => bit_count[0].CLK
clk => bit_count[1].CLK
clk => bit_count[2].CLK
clk => sample_count[0].CLK
clk => sample_count[1].CLK
clk => sample_count[2].CLK
clk => sample_count[3].CLK
clk => CS~6.DATAIN
reset => CS.OUTPUTSELECT
reset => CS.OUTPUTSELECT
reset => CS.OUTPUTSELECT
reset => CS.OUTPUTSELECT
reset => CS.OUTPUTSELECT
reset => sample_count.OUTPUTSELECT
reset => sample_count.OUTPUTSELECT
reset => sample_count.OUTPUTSELECT
reset => sample_count.OUTPUTSELECT
reset => bit_count.OUTPUTSELECT
reset => bit_count.OUTPUTSELECT
reset => bit_count.OUTPUTSELECT
reset => data_reg.OUTPUTSELECT
reset => data_reg.OUTPUTSELECT
reset => data_reg.OUTPUTSELECT
reset => data_reg.OUTPUTSELECT
reset => data_reg.OUTPUTSELECT
reset => data_reg.OUTPUTSELECT
reset => data_reg.OUTPUTSELECT
reset => data_reg.OUTPUTSELECT
reset => data_out.OUTPUTSELECT
reset => data_out.OUTPUTSELECT
reset => data_out.OUTPUTSELECT
reset => data_out.OUTPUTSELECT
reset => data_out.OUTPUTSELECT
reset => data_out.OUTPUTSELECT
reset => data_out.OUTPUTSELECT
reset => data_out.OUTPUTSELECT
reset => rx_done.OUTPUTSELECT
reset => parity_error.OUTPUTSELECT
reset => stop_error.OUTPUTSELECT
tick_16x => parity_error.OUTPUTSELECT
tick_16x => stop_error.OUTPUTSELECT
tick_16x => CS.OUTPUTSELECT
tick_16x => CS.OUTPUTSELECT
tick_16x => CS.OUTPUTSELECT
tick_16x => CS.OUTPUTSELECT
tick_16x => CS.OUTPUTSELECT
tick_16x => sample_count.OUTPUTSELECT
tick_16x => sample_count.OUTPUTSELECT
tick_16x => sample_count.OUTPUTSELECT
tick_16x => sample_count.OUTPUTSELECT
tick_16x => bit_count.OUTPUTSELECT
tick_16x => bit_count.OUTPUTSELECT
tick_16x => bit_count.OUTPUTSELECT
tick_16x => data_reg.OUTPUTSELECT
tick_16x => data_reg.OUTPUTSELECT
tick_16x => data_reg.OUTPUTSELECT
tick_16x => data_reg.OUTPUTSELECT
tick_16x => data_reg.OUTPUTSELECT
tick_16x => data_reg.OUTPUTSELECT
tick_16x => data_reg.OUTPUTSELECT
tick_16x => data_reg.OUTPUTSELECT
tick_16x => data_out.OUTPUTSELECT
tick_16x => data_out.OUTPUTSELECT
tick_16x => data_out.OUTPUTSELECT
tick_16x => data_out.OUTPUTSELECT
tick_16x => data_out.OUTPUTSELECT
tick_16x => data_out.OUTPUTSELECT
tick_16x => data_out.OUTPUTSELECT
tick_16x => data_out.OUTPUTSELECT
tick_16x => rx_done.OUTPUTSELECT
rx_data => data_reg.DATAB
rx_data => data_reg.DATAB
rx_data => data_reg.DATAB
rx_data => data_reg.DATAB
rx_data => data_reg.DATAB
rx_data => data_reg.DATAB
rx_data => data_reg.DATAB
rx_data => data_reg.DATAB
rx_data => parity_error.IN1
rx_data => CS.DATAB
rx_data => sample_count.OUTPUTSELECT
rx_data => sample_count.OUTPUTSELECT
rx_data => sample_count.OUTPUTSELECT
rx_data => sample_count.OUTPUTSELECT
rx_data => bit_count.OUTPUTSELECT
rx_data => bit_count.OUTPUTSELECT
rx_data => bit_count.OUTPUTSELECT
rx_data => CS.DATAB
rx_data => stop_error.DATAB
rx_data => CS.OUTPUTSELECT
rx_data => CS.OUTPUTSELECT
rx_data => CS.OUTPUTSELECT
rx_data => CS.OUTPUTSELECT
rx_data => CS.OUTPUTSELECT
rx_data => sample_count.OUTPUTSELECT
rx_data => sample_count.OUTPUTSELECT
rx_data => sample_count.OUTPUTSELECT
rx_data => sample_count.OUTPUTSELECT
data_out[0] <= data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_done <= rx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
parity_error <= parity_error~reg0.DB_MAX_OUTPUT_PORT_TYPE
stop_error <= stop_error~reg0.DB_MAX_OUTPUT_PORT_TYPE


